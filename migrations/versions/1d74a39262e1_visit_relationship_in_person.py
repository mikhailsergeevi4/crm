"""#Visit relationship in Person

Revision ID: 1d74a39262e1
Revises: 
Create Date: 2018-04-04 13:11:44.491676

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1d74a39262e1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('followed_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], )
    )
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=240), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_timestamp'), ['timestamp'], unique=False)

    op.create_table('region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=180), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('region', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_region_name'), ['name'], unique=True)

    op.create_table('clinic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clinic_name', sa.String(length=180), nullable=True),
    sa.Column('address', sa.String(length=250), nullable=True),
    sa.Column('inn', sa.String(length=15), nullable=False),
    sa.Column('region_name', sa.String(length=180), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['region_name'], ['region.name'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('inn')
    )
    with op.batch_alter_table('clinic', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_clinic_address'), ['address'], unique=False)
        batch_op.create_index(batch_op.f('ix_clinic_clinic_name'), ['clinic_name'], unique=True)

    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=250), nullable=True),
    sa.Column('comments', sa.String(length=250), nullable=True),
    sa.Column('picture', sa.String(length=250), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=180), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('last_visit', sa.String(length=20), nullable=True),
    sa.Column('next_visit', sa.String(length=20), nullable=True),
    sa.Column('date_of_request', sa.String(length=250), nullable=True),
    sa.Column('clinic_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['clinic_id'], ['clinic.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('person', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_person_comments'), ['comments'], unique=False)
        batch_op.create_index(batch_op.f('ix_person_department'), ['department'], unique=False)
        batch_op.create_index(batch_op.f('ix_person_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_person_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_person_phone'), ['phone'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('person', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_person_phone'))
        batch_op.drop_index(batch_op.f('ix_person_name'))
        batch_op.drop_index(batch_op.f('ix_person_email'))
        batch_op.drop_index(batch_op.f('ix_person_department'))
        batch_op.drop_index(batch_op.f('ix_person_comments'))

    op.drop_table('person')
    with op.batch_alter_table('clinic', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_clinic_clinic_name'))
        batch_op.drop_index(batch_op.f('ix_clinic_address'))

    op.drop_table('clinic')
    with op.batch_alter_table('region', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_region_name'))

    op.drop_table('region')
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_timestamp'))

    op.drop_table('post')
    op.drop_table('followers')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    # ### end Alembic commands ###
